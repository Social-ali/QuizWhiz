{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M.A\\\\Downloads\\\\pwyash-react-quizz-app-main\\\\pwyash-react-quizz-app-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport QuizView from \"./components/QuizView\";\nimport ScoreView from \"./components/ScoreView\";\nimport TopBar from \"./components/TopBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [isQuizOver, setIsQuizOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [alert, setAlert] = useState(\"\");\n  const [alertType, setAlertType] = useState(\"\");\n  const categories = [{\n    name: \"Select a category\",\n    id: \"\"\n  }, {\n    name: \"Computer\",\n    id: 18\n  }, {\n    name: \"Politics\",\n    id: 24\n  }, {\n    name: \"Sports\",\n    id: 21\n  }, {\n    name: \"General Knowledge\",\n    id: 9\n  }, {\n    name: \"History\",\n    id: 23\n  }];\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      if (!selectedCategory) return;\n      setIsLoading(true);\n      try {\n        const response = await fetch(`https://opentdb.com/api.php?amount=10&category=${selectedCategory}&type=multiple`);\n        const data = await response.json();\n        if (data.results) {\n          const formattedQuestions = data.results.map(q => ({\n            question: q.question,\n            correctAnswer: q.correct_answer,\n            answers: [...q.incorrect_answers, q.correct_answer].sort(() => Math.random() - 0.5).map(answer => ({\n              text: answer,\n              isCorrect: answer === q.correct_answer\n            }))\n          }));\n          setQuestions(formattedQuestions);\n        } else {\n          console.error(\"Unexpected data format:\", data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, [selectedCategory]);\n  const handleAnswerClick = (isCorrect, answer) => {\n    if (isCorrect) {\n      setScore(score + 1);\n      if (score + 1 === 5) {\n        showAlert(\"You have 5 correct answers!\", \"alert-primary\");\n      }\n    } else {\n      showAlert(\"Wrong answer! Try again.\", \"alert-danger\");\n    }\n    setUserAnswers([...userAnswers, {\n      answer,\n      isCorrect\n    }]);\n    const next = currentQuestion + 1;\n    if (next < questions.length) setCurrentQuestion(next);else setIsQuizOver(true);\n  };\n  const handleResetClick = () => {\n    setScore(0);\n    setCurrentQuestion(0);\n    setIsQuizOver(false);\n    setUserAnswers([]);\n    setQuizStarted(false);\n    setSelectedCategory(\"\");\n    setAlert(\"\"); // Clear alert on reset\n  };\n\n  const handleStartQuiz = () => {\n    setQuizStarted(true);\n    showAlert(\"Welcome to the Quiz!\", \"alert-success\");\n  };\n  const showAlert = (message, type) => {\n    setAlert(message);\n    setAlertType(type);\n    setTimeout(() => {\n      setAlert(\"\");\n    }, 3000);\n  };\n  useEffect(() => {\n    if (isQuizOver) {\n      if (score >= 5) {\n        showAlert(\"Congratulations! You passed the quiz!\", \"alert-success\");\n        new Audio(process.env.PUBLIC_URL + '/sounds/pass.mp4').play(); // Play pass sound\n      } else {\n        showAlert(\"You failed the quiz. Better luck next time!\", \"alert-danger\");\n        new Audio(process.env.PUBLIC_URL + '/sounds/fail.mp4').play(); // Play fail sound\n      }\n    }\n  }, [isQuizOver, score]); // Include score as a dependency\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 10\n    }, this), alert && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert ${alertType}`,\n      role: \"alert\",\n      children: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this), !quizStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to the Quiz!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: e => setSelectedCategory(e.target.value),\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category.id,\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartQuiz,\n        disabled: !selectedCategory,\n        children: \"Get Started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this) : isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this) : isQuizOver ? /*#__PURE__*/_jsxDEV(ScoreView, {\n      handleResetClick: handleResetClick,\n      score: score,\n      totalQuestions: questions.length,\n      userAnswers: userAnswers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this) : questions.length > 0 && /*#__PURE__*/_jsxDEV(QuizView, {\n      questions: questions,\n      currentQuestion: currentQuestion,\n      handleAnswerClick: handleAnswerClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"c9+/cLU+9FIjxYP2GMl/UCSNBtE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","QuizView","ScoreView","TopBar","App","questions","setQuestions","currentQuestion","setCurrentQuestion","isQuizOver","setIsQuizOver","score","setScore","userAnswers","setUserAnswers","quizStarted","setQuizStarted","isLoading","setIsLoading","selectedCategory","setSelectedCategory","alert","setAlert","alertType","setAlertType","categories","name","id","fetchQuestions","response","fetch","data","json","results","formattedQuestions","map","q","question","correctAnswer","correct_answer","answers","incorrect_answers","sort","Math","random","answer","text","isCorrect","console","error","handleAnswerClick","showAlert","next","length","handleResetClick","handleStartQuiz","message","type","setTimeout","Audio","process","env","PUBLIC_URL","play","e","target","value","category"],"sources":["C:/Users/M.A/Downloads/pwyash-react-quizz-app-main/pwyash-react-quizz-app-main/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport QuizView from \"./components/QuizView\";\nimport ScoreView from \"./components/ScoreView\";\nimport TopBar from \"./components/TopBar\";\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [isQuizOver, setIsQuizOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [alert, setAlert] = useState(\"\");\n  const [alertType, setAlertType] = useState(\"\");\n\n  const categories = [\n    { name: \"Select a category\", id: \"\" },\n    { name: \"Computer\", id: 18 },\n    { name: \"Politics\", id: 24 },\n    { name: \"Sports\", id: 21 },\n    { name: \"General Knowledge\", id: 9 },\n    { name: \"History\", id: 23 },\n  ];\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      if (!selectedCategory) return;\n      setIsLoading(true);\n      try {\n        const response = await fetch(`https://opentdb.com/api.php?amount=10&category=${selectedCategory}&type=multiple`);\n        const data = await response.json();\n\n        if (data.results) {\n          const formattedQuestions = data.results.map(q => ({\n            question: q.question,\n            correctAnswer: q.correct_answer,\n            answers: [...q.incorrect_answers, q.correct_answer].sort(() => Math.random() - 0.5).map(answer => ({\n              text: answer,\n              isCorrect: answer === q.correct_answer,\n            })),\n          }));\n          setQuestions(formattedQuestions);\n        } else {\n          console.error(\"Unexpected data format:\", data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchQuestions();\n  }, [selectedCategory]);\n\n  const handleAnswerClick = (isCorrect, answer) => {\n    if (isCorrect) {\n      setScore(score + 1);\n      if (score + 1 === 5) {\n        showAlert(\"You have 5 correct answers!\", \"alert-primary\");\n      }\n    } else {\n      showAlert(\"Wrong answer! Try again.\", \"alert-danger\");\n    }\n    setUserAnswers([...userAnswers, { answer, isCorrect }]);\n\n    const next = currentQuestion + 1;\n    if (next < questions.length) setCurrentQuestion(next);\n    else setIsQuizOver(true);\n  };\n\n  const handleResetClick = () => {\n    setScore(0);\n    setCurrentQuestion(0);\n    setIsQuizOver(false);\n    setUserAnswers([]);\n    setQuizStarted(false);\n    setSelectedCategory(\"\");\n    setAlert(\"\"); // Clear alert on reset\n  };\n\n  const handleStartQuiz = () => {\n    setQuizStarted(true);\n    showAlert(\"Welcome to the Quiz!\", \"alert-success\");\n  };\n\n  const showAlert = (message, type) => {\n    setAlert(message);\n    setAlertType(type);\n    setTimeout(() => {\n      setAlert(\"\");\n    }, 3000);\n  };\n\n  useEffect(() => {\n    if (isQuizOver) {\n      if (score >= 5) {\n        showAlert(\"Congratulations! You passed the quiz!\", \"alert-success\");\n        new Audio(process.env.PUBLIC_URL + '/sounds/pass.mp4').play(); // Play pass sound\n      } else {\n        showAlert(\"You failed the quiz. Better luck next time!\", \"alert-danger\");\n        new Audio(process.env.PUBLIC_URL + '/sounds/fail.mp4').play(); // Play fail sound\n      }\n    }\n  }, [isQuizOver, score]); // Include score as a dependency\n\n  return (\n    <div className=\"App\">\n         <TopBar />\n      {alert && <div className={`alert ${alertType}`} role=\"alert\">{alert}</div>}\n      {!quizStarted ? (\n        <div>\n          <h1>Welcome to the Quiz!</h1>\n          <select\n            value={selectedCategory}\n            onChange={(e) => setSelectedCategory(e.target.value)}\n          >\n            {categories.map((category) => (\n              <option key={category.id} value={category.id}>\n                {category.name}\n              </option>\n            ))}\n          </select>\n          <button\n            onClick={handleStartQuiz}\n            disabled={!selectedCategory}\n          >\n            Get Started\n          </button>\n        </div>\n      ) : isLoading ? (\n        <div>Loading questions...</div>\n      ) : isQuizOver ? (\n        <ScoreView \n          handleResetClick={handleResetClick} \n          score={score} \n          totalQuestions={questions.length} \n          userAnswers={userAnswers} \n        />\n      ) : (\n        questions.length > 0 && (\n          <QuizView\n            questions={questions}\n            currentQuestion={currentQuestion}\n            handleAnswerClick={handleAnswerClick}\n          />\n        )\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}