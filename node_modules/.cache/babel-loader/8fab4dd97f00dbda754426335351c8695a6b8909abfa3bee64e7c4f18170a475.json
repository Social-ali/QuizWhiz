{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M.A\\\\Downloads\\\\pwyash-react-quizz-app-main\\\\pwyash-react-quizz-app-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport QuizView from \"./components/QuizView\";\nimport ScoreView from \"./components/ScoreView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"f7g6jmJ5Z8xmdosMyWJRh7l7CdJBkYUnK1NWrRvu\"; // Replace with your API key\n\nfunction App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [isQuizOver, setIsQuizOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [quizStarted, setQuizStarted] = useState(false); // New state\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await fetch(`https://quizapi.io/api/v1/questions?apiKey=${API_KEY}&category=code&limit=10`);\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          const formattedQuestions = data.map(q => {\n            var _Object$values$find;\n            return {\n              question: q.question,\n              correctAnswer: (_Object$values$find = Object.values(q.answers).find(answer => answer.isCorrect)) === null || _Object$values$find === void 0 ? void 0 : _Object$values$find.text,\n              answers: Object.entries(q.answers).map(_ref => {\n                let [key, answer] = _ref;\n                return {\n                  text: answer.text,\n                  isCorrect: answer.isCorrect\n                };\n              })\n            };\n          });\n          setQuestions(formattedQuestions);\n        }\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  const handleAnswerClick = (isCorrect, answer) => {\n    if (isCorrect) setScore(score + 1);\n    setUserAnswers([...userAnswers, {\n      answer,\n      isCorrect\n    }]);\n    const next = currentQuestion + 1;\n    if (next < questions.length) setCurrentQuestion(next);else setIsQuizOver(true);\n  };\n  const handleResetClick = () => {\n    setScore(0);\n    setCurrentQuestion(0);\n    setIsQuizOver(false);\n    setUserAnswers([]);\n    setQuizStarted(false); // Reset quiz state\n  };\n\n  const handleStartQuiz = () => {\n    setQuizStarted(true); // Start the quiz\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !quizStarted ?\n    /*#__PURE__*/\n    // Show Get Started button if quiz hasn't started\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to the Quiz!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartQuiz,\n        children: \"Get Started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : isQuizOver ? /*#__PURE__*/_jsxDEV(ScoreView, {\n      handleResetClick: handleResetClick,\n      score: score,\n      totalQuestions: questions.length,\n      userAnswers: userAnswers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : questions.length > 0 && /*#__PURE__*/_jsxDEV(QuizView, {\n      questions: questions,\n      currentQuestion: currentQuestion,\n      handleAnswerClick: handleAnswerClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9g4JPqX2PrNeNR7zEVEH8FapxN8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","QuizView","ScoreView","API_KEY","App","questions","setQuestions","currentQuestion","setCurrentQuestion","isQuizOver","setIsQuizOver","score","setScore","userAnswers","setUserAnswers","quizStarted","setQuizStarted","fetchQuestions","response","fetch","data","json","Array","isArray","formattedQuestions","map","q","question","correctAnswer","Object","values","answers","find","answer","isCorrect","text","entries","key","error","console","handleAnswerClick","next","length","handleResetClick","handleStartQuiz"],"sources":["C:/Users/M.A/Downloads/pwyash-react-quizz-app-main/pwyash-react-quizz-app-main/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport QuizView from \"./components/QuizView\";\nimport ScoreView from \"./components/ScoreView\";\n\nconst API_KEY = \"f7g6jmJ5Z8xmdosMyWJRh7l7CdJBkYUnK1NWrRvu\"; // Replace with your API key\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [isQuizOver, setIsQuizOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [quizStarted, setQuizStarted] = useState(false); // New state\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await fetch(`https://quizapi.io/api/v1/questions?apiKey=${API_KEY}&category=code&limit=10`);\n        const data = await response.json();\n\n        if (Array.isArray(data)) {\n          const formattedQuestions = data.map(q => ({\n            question: q.question,\n            correctAnswer: Object.values(q.answers).find(answer => answer.isCorrect)?.text,\n            answers: Object.entries(q.answers).map(([key, answer]) => ({\n              text: answer.text,\n              isCorrect: answer.isCorrect,\n            })),\n          }));\n          setQuestions(formattedQuestions);\n        }\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n\n    fetchQuestions();\n  }, []);\n\n  const handleAnswerClick = (isCorrect, answer) => {\n    if (isCorrect) setScore(score + 1);\n    setUserAnswers([...userAnswers, { answer, isCorrect }]);\n    \n    const next = currentQuestion + 1;\n    if (next < questions.length) setCurrentQuestion(next);\n    else setIsQuizOver(true);\n  };\n\n  const handleResetClick = () => {\n    setScore(0);\n    setCurrentQuestion(0);\n    setIsQuizOver(false);\n    setUserAnswers([]);\n    setQuizStarted(false); // Reset quiz state\n  };\n\n  const handleStartQuiz = () => {\n    setQuizStarted(true); // Start the quiz\n  };\n\n  return (\n    <div className=\"App\">\n      {!quizStarted ? ( // Show Get Started button if quiz hasn't started\n        <div>\n          <h1>Welcome to the Quiz!</h1>\n          <button onClick={handleStartQuiz}>Get Started</button>\n        </div>\n      ) : isQuizOver ? (\n        <ScoreView \n          handleResetClick={handleResetClick} \n          score={score} \n          totalQuestions={questions.length} \n          userAnswers={userAnswers} \n        />\n      ) : (\n        questions.length > 0 && (\n          <QuizView\n            questions={questions}\n            currentQuestion={currentQuestion}\n            handleAnswerClick={handleAnswerClick}\n          />\n        )\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}