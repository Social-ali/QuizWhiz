{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M.A\\\\Downloads\\\\pwyash-react-quizz-app-main\\\\pwyash-react-quizz-app-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport QuizView from \"./components/QuizView\";\nimport ScoreView from \"./components/ScoreView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"https://opentdb.com/api.php?amount=10&type=multiple\";\nconst categories = {\n  Computer: 18,\n  Politics: 24,\n  Sports: 21,\n  GeneralKnowledge: 9,\n  History: 23\n};\nfunction App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [isQuizOver, setIsQuizOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      if (!selectedCategory) return; // Don't fetch if no category is selected\n\n      try {\n        const response = await fetch(`${API_BASE_URL}&category=${categories[selectedCategory]}`);\n        const data = await response.json();\n        if (Array.isArray(data.results)) {\n          const formattedQuestions = data.results.map(q => ({\n            question: q.question,\n            correctAnswer: q.correct_answer,\n            answers: [...q.incorrect_answers, q.correct_answer].sort(() => Math.random() - 0.5).map(answer => ({\n              text: answer,\n              isCorrect: answer === q.correct_answer\n            }))\n          }));\n          setQuestions(formattedQuestions);\n        }\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n    fetchQuestions();\n  }, [selectedCategory]);\n  const handleAnswerClick = (isCorrect, answer) => {\n    if (isCorrect) setScore(score + 1);\n    setUserAnswers([...userAnswers, {\n      answer,\n      isCorrect\n    }]);\n    const next = currentQuestion + 1;\n    if (next < questions.length) setCurrentQuestion(next);else setIsQuizOver(true);\n  };\n  const handleResetClick = () => {\n    setScore(0);\n    setCurrentQuestion(0);\n    setIsQuizOver(false);\n    setUserAnswers([]);\n    setQuizStarted(false);\n    setSelectedCategory(\"\"); // Reset selected category\n  };\n\n  const handleStartQuiz = () => {\n    setQuizStarted(true); // Start the quiz\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !quizStarted ?\n    /*#__PURE__*/\n    // Show dropdown and Get Started button if quiz hasn't started\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to the Quiz!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: e => setSelectedCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), Object.keys(categories).map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartQuiz,\n        disabled: !selectedCategory,\n        children: \"Get Started\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : isQuizOver ? /*#__PURE__*/_jsxDEV(ScoreView, {\n      handleResetClick: handleResetClick,\n      score: score,\n      totalQuestions: questions.length,\n      userAnswers: userAnswers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : questions.length > 0 && /*#__PURE__*/_jsxDEV(QuizView, {\n      questions: questions,\n      currentQuestion: currentQuestion,\n      handleAnswerClick: handleAnswerClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7/4IlrAMf1gKfV3pxAJfdVRx0oE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","QuizView","ScoreView","API_BASE_URL","categories","Computer","Politics","Sports","GeneralKnowledge","History","App","questions","setQuestions","currentQuestion","setCurrentQuestion","isQuizOver","setIsQuizOver","score","setScore","userAnswers","setUserAnswers","quizStarted","setQuizStarted","selectedCategory","setSelectedCategory","fetchQuestions","response","fetch","data","json","Array","isArray","results","formattedQuestions","map","q","question","correctAnswer","correct_answer","answers","incorrect_answers","sort","Math","random","answer","text","isCorrect","error","console","handleAnswerClick","next","length","handleResetClick","handleStartQuiz","e","target","value","Object","keys","category"],"sources":["C:/Users/M.A/Downloads/pwyash-react-quizz-app-main/pwyash-react-quizz-app-main/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport QuizView from \"./components/QuizView\";\nimport ScoreView from \"./components/ScoreView\";\n\nconst API_BASE_URL = \"https://opentdb.com/api.php?amount=10&type=multiple\";\n\nconst categories = {\n  Computer: 18,\n  Politics: 24,\n  Sports: 21,\n  GeneralKnowledge: 9,\n  History: 23,\n};\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [isQuizOver, setIsQuizOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      if (!selectedCategory) return; // Don't fetch if no category is selected\n\n      try {\n        const response = await fetch(`${API_BASE_URL}&category=${categories[selectedCategory]}`);\n        const data = await response.json();\n\n        if (Array.isArray(data.results)) {\n          const formattedQuestions = data.results.map(q => ({\n            question: q.question,\n            correctAnswer: q.correct_answer,\n            answers: [...q.incorrect_answers, q.correct_answer].sort(() => Math.random() - 0.5).map(answer => ({\n              text: answer,\n              isCorrect: answer === q.correct_answer,\n            })),\n          }));\n          setQuestions(formattedQuestions);\n        }\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n\n    fetchQuestions();\n  }, [selectedCategory]);\n\n  const handleAnswerClick = (isCorrect, answer) => {\n    if (isCorrect) setScore(score + 1);\n    setUserAnswers([...userAnswers, { answer, isCorrect }]);\n    \n    const next = currentQuestion + 1;\n    if (next < questions.length) setCurrentQuestion(next);\n    else setIsQuizOver(true);\n  };\n\n  const handleResetClick = () => {\n    setScore(0);\n    setCurrentQuestion(0);\n    setIsQuizOver(false);\n    setUserAnswers([]);\n    setQuizStarted(false);\n    setSelectedCategory(\"\"); // Reset selected category\n  };\n\n  const handleStartQuiz = () => {\n    setQuizStarted(true); // Start the quiz\n  };\n\n  return (\n    <div className=\"App\">\n      {!quizStarted ? ( // Show dropdown and Get Started button if quiz hasn't started\n        <div>\n          <h1>Welcome to the Quiz!</h1>\n          <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\n            <option value=\"\">Select Category</option>\n            {Object.keys(categories).map(category => (\n              <option key={category} value={category}>{category}</option>\n            ))}\n          </select>\n          <button onClick={handleStartQuiz} disabled={!selectedCategory}>Get Started</button>\n        </div>\n      ) : isQuizOver ? (\n        <ScoreView \n          handleResetClick={handleResetClick} \n          score={score} \n          totalQuestions={questions.length} \n          userAnswers={userAnswers} \n        />\n      ) : (\n        questions.length > 0 && (\n          <QuizView\n            questions={questions}\n            currentQuestion={currentQuestion}\n            handleAnswerClick={handleAnswerClick}\n          />\n        )\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}