{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M.A\\\\Downloads\\\\pwyash-react-quizz-app-main\\\\pwyash-react-quizz-app-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport QuizView from \"./components/QuizView\";\nimport ScoreView from \"./components/ScoreView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [isQuizOver, setIsQuizOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [quizStarted, setQuizStarted] = useState(false);\n  const API_KEY = \"khjfRvtlOQkkGaAvUz41ztOqX2XxvdjIIqbNvO9b\"; // Replace with your actual API key\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await fetch(`https://quizapi.io/api/v1/questions?apiKey=${API_KEY}&category=code&limit=10&tags=HTML,DevOps,JavaScript,Laravel,MySQL,PHP,WordPress`);\n        const data = await response.json();\n        const formattedQuestions = data.map(q => ({\n          question: q.question,\n          answers: q.answers.map(answer => ({\n            text: answer.text,\n            isCorrect: answer.isCorrect\n          }))\n        }));\n        setQuestions(formattedQuestions);\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  const handleAnswerClick = isCorrect => {\n    if (isCorrect) setScore(score + 1);\n    const next = currentQuestion + 1;\n    if (next < questions.length) setCurrentQuestion(next);else setIsQuizOver(true);\n  };\n  const handleResetClick = () => {\n    setScore(0);\n    setCurrentQuestion(0);\n    setIsQuizOver(false);\n    setQuizStarted(false);\n  };\n  const handleStartClick = () => {\n    setQuizStarted(true);\n    setIsQuizOver(false);\n    setCurrentQuestion(0);\n    setScore(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !quizStarted ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartClick,\n      className: \"start-button\",\n      children: \"Start Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isQuizOver ? /*#__PURE__*/_jsxDEV(ScoreView, {\n        handleResetClick: handleResetClick,\n        score: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(QuizView, {\n        questions: questions,\n        currentQuestion: currentQuestion,\n        handleAnswerClick: handleAnswerClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GXnfVcL70O9AQqzQMKcPfxfS9W0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","QuizView","ScoreView","App","questions","setQuestions","currentQuestion","setCurrentQuestion","isQuizOver","setIsQuizOver","score","setScore","quizStarted","setQuizStarted","API_KEY","fetchQuestions","response","fetch","data","json","formattedQuestions","map","q","question","answers","answer","text","isCorrect","error","console","handleAnswerClick","next","length","handleResetClick","handleStartClick"],"sources":["C:/Users/M.A/Downloads/pwyash-react-quizz-app-main/pwyash-react-quizz-app-main/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport QuizView from \"./components/QuizView\";\nimport ScoreView from \"./components/ScoreView\";\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [isQuizOver, setIsQuizOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [quizStarted, setQuizStarted] = useState(false);\n\n  const API_KEY = \"khjfRvtlOQkkGaAvUz41ztOqX2XxvdjIIqbNvO9b\"; // Replace with your actual API key\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await fetch(`https://quizapi.io/api/v1/questions?apiKey=${API_KEY}&category=code&limit=10&tags=HTML,DevOps,JavaScript,Laravel,MySQL,PHP,WordPress`);\n        const data = await response.json();\n        const formattedQuestions = data.map(q => ({\n          question: q.question,\n          answers: q.answers.map(answer => ({\n            text: answer.text,\n            isCorrect: answer.isCorrect\n          }))\n        }));\n        setQuestions(formattedQuestions);\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n\n    fetchQuestions();\n  }, []);\n\n  const handleAnswerClick = (isCorrect) => {\n    if (isCorrect) setScore(score + 1);\n\n    const next = currentQuestion + 1;\n    if (next < questions.length) setCurrentQuestion(next);\n    else setIsQuizOver(true);\n  };\n\n  const handleResetClick = () => {\n    setScore(0);\n    setCurrentQuestion(0);\n    setIsQuizOver(false);\n    setQuizStarted(false);\n  };\n\n  const handleStartClick = () => {\n    setQuizStarted(true);\n    setIsQuizOver(false);\n    setCurrentQuestion(0);\n    setScore(0);\n  };\n\n  return (\n    <div className=\"App\">\n      {!quizStarted ? (\n        <button onClick={handleStartClick} className=\"start-button\">\n          Start Quiz\n        </button>\n      ) : (\n        <>\n          {isQuizOver ? (\n            <ScoreView handleResetClick={handleResetClick} score={score} />\n          ) : (\n            <QuizView\n              questions={questions}\n              currentQuestion={currentQuestion}\n              handleAnswerClick={handleAnswerClick}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}